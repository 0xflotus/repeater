(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{46:function(e){e.exports={id:"error-handling",title:"Error Handling",description:"Because error handling is important for creating robust applications, channels are designed to catch and propagate any errors they receive in a predictable fashion. Every promise which is passed to a channel is preemptively caught using `Promise.prototype.catch` to prevent unhandled rejections, and the errors are forwarded to the iterator methods `next`/`return`/`throw` so channel consumers can handle them.",source:"/Users/brian/Projects/channel/website/docs/06_error-handling.md",permalink:"/docs/error-handling",sidebar:"docs",category:"Guides",next:"inverted-channels",previous:"safety",previous_title:"How are Channels “Safe”?",next_title:"Inverted Channels"}}}]);