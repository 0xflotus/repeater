(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{39:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",function(){return o}),a.d(n,"rightToc",function(){return i}),a.d(n,"default",function(){return p});a(0);var t=a(59);function s(){return(s=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e}).apply(this,arguments)}function r(e,n){if(null==e)return{};var a,t,s=function(e,n){if(null==e)return{};var a,t,s={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(s[a]=e[a]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var o={id:"quickstart",title:"Quickstart"},i=[{value:"Installation",id:"installation",children:[]},{value:"Requirements",id:"requirements",children:[]},{value:"Examples",id:"examples",children:[]}],l={rightToc:i},c="wrapper";function p(e){var n=e.components,a=r(e,["components"]);return Object(t.b)(c,s({},l,a,{components:n,mdxType:"MDXLayout"}),Object(t.b)("h2",null,Object(t.b)("a",s({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"installation"})),Object(t.b)("a",s({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#installation"}),"#"),"Installation"),Object(t.b)("p",null,"Channel.js is available on ",Object(t.b)("a",s({parentName:"p"},{href:"https://www.npmjs.com/package/@channel/channel"}),"npm")," in the CommonJS and ESModule formats."),Object(t.b)("p",null,Object(t.b)("inlineCode",{parentName:"p"},"$ npm install @channel/channel")),Object(t.b)("p",null,Object(t.b)("inlineCode",{parentName:"p"},"$ yarn add @channel/channel")),Object(t.b)("h2",null,Object(t.b)("a",s({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"requirements"})),Object(t.b)("a",s({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#requirements"}),"#"),"Requirements"),Object(t.b)("p",null,"The ",Object(t.b)("inlineCode",{parentName:"p"},"@channel/channel")," package has no dependencies, but requires the following globals in order to work:"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"Promise")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"Symbol.iterator")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"Symbol.asyncIterator")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"WeakMap"))),Object(t.b)("p",null,"In addition, channels are most useful when used via ",Object(t.b)("inlineCode",{parentName:"p"},"async/await")," and ",Object(t.b)("inlineCode",{parentName:"p"},"for awaitâ€¦of")," statements. You can compile your code with babel or typescript to support enviroments which lack these syntax features."),Object(t.b)("h2",null,Object(t.b)("a",s({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"examples"})),Object(t.b)("a",s({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#examples"}),"#"),"Examples"),Object(t.b)("h4",null,Object(t.b)("a",s({parentName:"h4"},{"aria-hidden":!0,className:"anchor",id:"logging-timestamps-with-setinterval"})),Object(t.b)("a",s({parentName:"h4"},{"aria-hidden":!0,className:"hash-link",href:"#logging-timestamps-with-setinterval"}),"#"),"Logging timestamps with setInterval"),Object(t.b)("pre",null,Object(t.b)("code",s({parentName:"pre"},{className:"language-js"}),'import { Channel } from "@channel/channel";\n\nconst timestamps = new Channel(async (push, stop) => {\n  push(Date.now());\n  const timer = setInterval(() => push(Date.now()), 1000);\n  await stop;\n  clearInterval(timer);\n});\n\n(async function() {\n  let i = 0;\n  for await (const timestamp of timestamps) {\n    console.log(timestamp);\n    i++;\n    if (i >= 10) {\n      console.log("ALL DONE!");\n      break; // triggers clearInterval above\n    }\n  }\n})();\n')),Object(t.b)("h4",null,Object(t.b)("a",s({parentName:"h4"},{"aria-hidden":!0,className:"anchor",id:"creating-a-channel-from-a-websocket"})),Object(t.b)("a",s({parentName:"h4"},{"aria-hidden":!0,className:"hash-link",href:"#creating-a-channel-from-a-websocket"}),"#"),"Creating a channel from a websocket"),Object(t.b)("pre",null,Object(t.b)("code",s({parentName:"pre"},{className:"language-js"}),'import { Channel } from "@channel/channel";\n\nconst socket = new WebSocket("ws://echo.websocket.org");\nconst messages = new Channel(async (push, stop) => {\n  socket.onmessage = (ev) => push(ev.data);\n  socket.onerror = () => stop(new Error("WebSocket error"));\n  socket.onclose = () => stop();\n  await stop;\n  socket.close();\n});\n\n(async function() {\n  for await (const message of messages) {\n    console.log(message);\n    if (message === "close") {\n      console.log("Closing!");\n      break; // closes the socket\n    }\n  }\n})();\n\nsocket.onopen = () => {\n  socket.send("hello"); // "hello"\n  socket.send("world"); // "world"\n  socket.send("close"); // "close", "Closing!"\n};\n')),Object(t.b)("h4",null,Object(t.b)("a",s({parentName:"h4"},{"aria-hidden":!0,className:"anchor",id:"listening-for-the-konami-code-and-canceling-if-kbdescapekbd-is-pressed"})),Object(t.b)("a",s({parentName:"h4"},{"aria-hidden":!0,className:"hash-link",href:"#listening-for-the-konami-code-and-canceling-if-kbdescapekbd-is-pressed"}),"#"),"Listening for the ",Object(t.b)("a",s({parentName:"h4"},{href:"https://en.wikipedia.org/wiki/Konami_Code"}),"Konami Code")," and canceling if ",Object(t.b)("kbd",null,"Escape")," is pressed"),Object(t.b)("pre",null,Object(t.b)("code",s({parentName:"pre"},{className:"language-js"}),'import { Channel } from "@channel/channel";\n\nconst keys = new Channel(async (push, stop) => {\n  const listener = (ev) => {\n    if (ev.key === "Escape") {\n      stop();\n    } else {\n      push(ev.key);\n    }\n  };\n  window.addEventListener("keyup", listener);\n  await stop;\n  window.removeEventListener("keyup", listener);\n});\n\nconst konami = ["ArrowUp", "ArrowUp", "ArrowDown", "ArrowDown", "ArrowLeft", "ArrowRight", "ArrowLeft", "ArrowRight", "b", "a"];\n\n(async function() {\n  let i = 0;\n  for await (const key of keys) {\n    if (key === konami[i]) {\n      i++;\n    } else {\n      i = 0;\n    }\n    if (i >= konami.length) {\n      console.log("KONAMI!!!");\n      break; // removes the keyup listener\n    }\n  }\n})();\n')))}p.isMDXComponent=!0}}]);