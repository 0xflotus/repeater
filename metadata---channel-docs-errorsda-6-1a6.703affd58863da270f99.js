(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{43:function(e){e.exports={id:"errors",title:"Dealing with Errors",description:"Because error handling is important for creating robust applications, channels are designed to catch and propagate any errors and promise rejections they receive in a predictable fashion. Every promise which a channel consumes is preemptively caught using the `Promise.prototype.catch` method so there is no possibility for unhandled rejections, and errors will cause the `next`/`return`/`throw` methods to reject depending on when or how the errors occur. If you encounter an unhandled promise rejection which could not have been handled via the async iterator methods, please [open an issue](https://github.com/channeljs/channel/issues/new).",source:"/Users/brian/Projects/channel/website/docs/errors.md",permalink:"channel/docs/errors",sidebar:"docs",category:"Guides",next:"anti-patterns",previous:"safety",previous_title:"How are Channels “Safe”?",next_title:"Common Anti-Patterns"}}}]);