(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{52:function(e){e.exports={id:"inverted-channels",title:"Inverted Channels",description:"Sometimes, you want to create an async iterator which responds to calls to `next` as asynchronous events themselves. For instance, you might want to create a timer channel which fires a fixed period of time after `next` is called, or even throws an error if it is not called within that fixed period of time. You can create these *inverted channels* by taking advantage of the fact that channels unwrap and await promises and promise-like objects which are passed to the `push` function:",source:"/Users/brian/Projects/channel/website/docs/07_inverted-channels.md",permalink:"/docs/inverted-channels",sidebar:"docs",category:"Guides",next:"utilities",previous:"error-handling",previous_title:"Error Handling",next_title:"Additional Channel-Based Utilities"}}}]);